// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

(ion_1_0 "Ion 1.0 system symbol"
         (then "'$ion'"                     (toplevel '#$1')  (produces $ion))
         (then "'$ion_1_0'"                 (toplevel '#$2')  (produces $ion_1_0))
         (then "'$ion_symbol_table'"        (toplevel '#$3')  (produces $ion_symbol_table))
         (then "'name'"                     (toplevel '#$4')  (produces name))
         (then "'version'"                  (toplevel '#$5')  (produces version))
         (then "'imports'"                  (toplevel '#$6')  (produces imports))
         (then "'symbols'"                  (toplevel '#$7')  (produces symbols))
         (then "'max_id'"                   (toplevel '#$8')  (produces max_id))
         (then "'$ion_shared_symbol_table'" (toplevel '#$9')  (produces $ion_shared_symbol_table))
         (then "only has 9 symbols"
               (toplevel '#$10')
               (signals "Invalid symbol address: 10")))

(ion_1_1 "Ion 1.1 system symbol"
         // The system symbols don't always occupy these user-symbol addresses, but the default module is preloaded
         // with the content of the system module after encountering an Ion 1.1 IVM, so this is a valid testing approach.
         (then "'$ion'"                     (toplevel '#$1')  (produces $ion))
         (then "'$ion_1_0'"                 (toplevel '#$2')  (produces $ion_1_0))
         (then "'$ion_symbol_table'"        (toplevel '#$3')  (produces $ion_symbol_table))
         (then "'name'"                     (toplevel '#$4')  (produces name))
         (then "'version'"                  (toplevel '#$5')  (produces version))
         (then "'imports'"                  (toplevel '#$6')  (produces imports))
         (then "'symbols'"                  (toplevel '#$7')  (produces symbols))
         (then "'max_id'"                   (toplevel '#$8')  (produces max_id))
         (then "'$ion_shared_symbol_table'" (toplevel '#$9')  (produces $ion_shared_symbol_table))
         (then "'encoding'"                 (toplevel '#$10') (produces encoding))
         (then "'$ion_literal'"             (toplevel '#$11') (produces $ion_literal))
         (then "'$ion_shared_module'"       (toplevel '#$12') (produces $ion_shared_module))
         (then "'macro'"                    (toplevel '#$13') (produces macro))
         (then "'macro_table'"              (toplevel '#$14') (produces macro_table))
         (then "'symbol_table'"             (toplevel '#$15') (produces symbol_table))
         (then "'module'"                   (toplevel '#$16') (produces module))
         (then "'export'"                   (toplevel '#$17') (produces export))
         (then "'import'"                   (toplevel '#$18') (produces import))
         (then "'flex_symbol'"              (toplevel '#$19') (produces flex_symbol))
         (then "'flex_int'"                 (toplevel '#$20') (produces flex_int))
         (then "'flex_uint'"                (toplevel '#$21') (produces flex_uint))
         (then "'uint8'"                    (toplevel '#$22') (produces uint8))
         (then "'uint16'"                   (toplevel '#$23') (produces uint16))
         (then "'uint32'"                   (toplevel '#$24') (produces uint32))
         (then "'uint64'"                   (toplevel '#$25') (produces uint64))
         (then "'int8'"                     (toplevel '#$26') (produces int8))
         (then "'int16'"                    (toplevel '#$27') (produces int16))
         (then "'int32'"                    (toplevel '#$28') (produces int32))
         (then "'int64'"                    (toplevel '#$29') (produces int64))
         (then "'float16'"                  (toplevel '#$30') (produces float16))
         (then "'float32'"                  (toplevel '#$31') (produces float32))
         (then "'float64'"                  (toplevel '#$32') (produces float64))
         (then "''"                         (toplevel '#$33') (produces ''))
         (then "'for'"                      (toplevel '#$34') (produces for))
         (then "'literal'"                  (toplevel '#$35') (produces literal))
         (then "'if_none'"                  (toplevel '#$36') (produces if_none))
         (then "'if_some'"                  (toplevel '#$37') (produces if_some))
         (then "'if_single'"                (toplevel '#$38') (produces if_single))
         (then "'if_multi'"                 (toplevel '#$39') (produces if_multi))
         (then "'none'"                     (toplevel '#$40') (produces none))
         (then "'values'"                   (toplevel '#$41') (produces values))
         (then "'default'"                  (toplevel '#$42') (produces default))
         (then "'meta'"                     (toplevel '#$43') (produces meta))
         (then "'repeat'"                   (toplevel '#$44') (produces repeat))
         (then "'flatten'"                  (toplevel '#$45') (produces flatten))
         (then "'delta'"                    (toplevel '#$46') (produces delta))
         (then "'sum'"                      (toplevel '#$47') (produces sum))
         (then "'annotate'"                 (toplevel '#$48') (produces annotate))
         (then "'make_string'"              (toplevel '#$49') (produces make_string))
         (then "'make_symbol'"              (toplevel '#$50') (produces make_symbol))
         (then "'make_decimal'"             (toplevel '#$51') (produces make_decimal))
         (then "'make_timestamp'"           (toplevel '#$52') (produces make_timestamp))
         (then "'make_blob'"                (toplevel '#$53') (produces make_blob))
         (then "'make_list'"                (toplevel '#$54') (produces make_list))
         (then "'make_sexp'"                (toplevel '#$55') (produces make_sexp))
         (then "'make_field'"               (toplevel '#$56') (produces make_field))
         (then "'make_struct'"              (toplevel '#$57') (produces make_struct))
         (then "'parse_ion'"                (toplevel '#$58') (produces parse_ion))
         (then "'set_symbols'"              (toplevel '#$59') (produces set_symbols))
         (then "'add_symbols'"              (toplevel '#$60') (produces add_symbols))
         (then "'set_macros'"               (toplevel '#$61') (produces set_macros))
         (then "'add_macros'"               (toplevel '#$62') (produces add_macros))
         (then "'use'"                      (toplevel '#$63') (produces use))
         (then "only has 63 symbols"
               (toplevel '#$64')
               (signals "Invalid symbol address: 64")))
