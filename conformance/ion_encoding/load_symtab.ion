// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


// Exact-match imports

(ion_1_1
  (toplevel $ion_encoding::((load abc "abcs" 1)
                            (symbol_table abc)))
  (then (toplevel '#$12')
        (produces a))
  (then (toplevel '#$13')
        (signals "Invalid symbol address:")))

(ion_1_1
  (toplevel $ion_encoding::((load mno "mnop" 3)
                            (load abc "abcs" 1)
                            (symbol_table abc mno)))
  (then (toplevel '#$12' '#$13' '#$15')
        (produces a m o))
  (then (toplevel '#$16')
        (signals "Invalid symbol address:")))


// Absent shared symbol

(ion_1_1
  (toplevel $ion_encoding::((load mno "mnop" 4)
                            (symbol_table mno)))
  (then (toplevel '#$12' '#$13')
        (denotes (Symbol (absent "mnop" 1)) (Symbol "n"))))


// Module name shadowing

(ion_1_1
  (toplevel $ion_encoding::((load m "mnop" 4)
                            (load m "mnop" 3)
                            (symbol_table m ["x"])))
  (then (toplevel '#$12' '#$13' '#$14' '#$15')
        (produces m n o x))
  (then (toplevel '#$16')
        (signals "Invalid symbol address:")))


// Mix and match imported and local symbols

(ion_1_1
  (toplevel $ion_encoding::((load mno "mnop" 3)
                            (load abc "abcs" 1)
                            (symbol_table ["l1", "l2"] abc ["l3"] mno ["l4"])))
  (then (toplevel '#$12' '#$13' '#$14' '#$15' '#$16' '#$17' '#$18' '#$19')
        (produces l1 l2 a l3 m n o l4))
  (then (toplevel '#$20')
        (signals "Invalid symbol address:")))


// Retention

(ion_1_1
  (toplevel $ion_encoding::((load A "abcs" 1)
                            (symbol_table ["l1"] A))
            $ion_encoding::((symbol_table ["l2"] A))) // No `retains` clause
  (signals "Module not in scope: A"))

(ion_1_1
  (toplevel $ion_encoding::((load A "abcs" 1) (symbol_table ["l1"] A))
            $ion_encoding::((retain *)        (symbol_table ["l2"] A))
            '#$12' '#$13')
  (produces l2 a))

(ion_1_1
  (toplevel $ion_encoding::((load A "abcs" 1)
                            (load M "mnop" 3))
            $ion_encoding::((retain A)
                            (symbol_table M)))
  (signals "Module not in scope: M"))
