// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


(ion_1_1
  (each (encoding (module M))
        (encoding (module M (symbols)))
        (encoding (module M (symbols [])))
        (encoding (module M (symbols null.list)))
        (then (toplevel '#$12')
              (signals "Invalid symbol address:"))))

(ion_1_1 "Module declaration rejects invalid module name"
  (each (encoding (module ''))
        (encoding (module null.symbol))
        (encoding (module '#$0'))             // TODO test absent shared symbol
        (encoding (module "M"))
        (encoding (module 1))
        (signals "Invalid module name:")))

(ion_1_1
  (each (encoding (module M (symbols ["a", "b"]))
                  (symbols M))
        (encoding (module M (symbols ["a"] ["b"]))
                  (symbols M))
        (encoding (module M (symbols ["a"] [] ["b"]))
                  (symbols M))
        (encoding (module M (symbols ["a"] null.list ["b"]))
                  (symbols M))
        (then (toplevel '#$12' '#$13')
              (produces a b))
        (then (toplevel '#$14')
              (signals "Invalid symbol address:"))))

(ion_1_1 "A module can be installed twice in the local symbol table"
  (encoding (module M (symbols ["a"]))
            (symbols M M))
  (then (toplevel '#$12' '#$13')
        (produces a a))
  (then (toplevel '#$14')
        (signals "Invalid symbol address:")))

(ion_1_1
  (each (encoding (module M (symbols null.sexp)))
        (encoding (module M (symbols ())))
        (encoding (module M (symbols ("a" "b"))))
        (encoding (module M (symbols ["a"] ("b"))))
        (signals "Unexpected element in `symbol_table`")))


// Retention

(ion_1_1
  (encoding (load A "abcs" 1))
  (encoding (retain A)
            (module I (symbols ["i"]))
            (symbols A))
  (toplevel '#$12')
  (encoding (retain I A)
            (symbols I A))
  (toplevel '#$12' '#$13')
  (produces a i a))
